<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.redhat.jp.labs.sample</groupId>
	<artifactId>acceptance-test</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>ACCEPTANCE TEST</name>
	<prerequisites>
		<maven>3.5.2</maven>
	</prerequisites>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- ===== maven-compiler-plugin configurations ===== -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
		<maven.compiler.showWarnings>true</maven.compiler.showWarnings>
		<maven.compiler.optimize>true</maven.compiler.optimize>
		<maven.compiler.verbose>true</maven.compiler.verbose>
		<!-- ===== plugin versions ===== -->
		<version.maven.surefire.plugin>2.22.0</version.maven.surefire.plugin>
		<version.maven.compiler.plugin>3.1</version.maven.compiler.plugin>
		<!-- ===== Library versions ===== -->
		<version.junit>4.12</version.junit>
		<version.commons-lang3>3.4</version.commons-lang3>
		<version.org.slf4j>1.7.25</version.org.slf4j>
		<version.ch.qos.logback>1.2.3</version.ch.qos.logback>
		<version.io.cucumber>6.10.1</version.io.cucumber>
		<version.com.codeborne.selenide>5.18.1</version.com.codeborne.selenide>
		<version.com.google.guava>30.1-jre</version.com.google.guava>
		<version.org.assertj>3.11.1</version.org.assertj>
		<version.org.dbunit>2.7.0</version.org.dbunit>
		<version.com.mysql>8.0.28</version.com.mysql>
	</properties>

	<dependencies>
		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<!-- assertj -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${version.org.assertj}</version>
		</dependency>
		<!-- guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${version.com.google.guava}</version>
		</dependency>
		<!-- selenide -->
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>selenide</artifactId>
			<version>${version.com.codeborne.selenide}</version>
			<scope>test</scope>
		</dependency>
		<!-- cucumber -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${version.io.cucumber}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${version.io.cucumber}</version>
			<scope>test</scope>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${version.org.slf4j}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${version.org.slf4j}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${version.ch.qos.logback}</version>
			<scope>test</scope>
		</dependency>
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${version.com.mysql}</version>
			<scope>test</scope>
		</dependency>
		<!-- dbunit -->
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${version.org.dbunit}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>dependency:copy-dependencies test</defaultGoal>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.maven.surefire.plugin}</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<argLine>-Dfile.encoding=UTF-8</argLine>
						<!-- Workaround for the Maven Surefire Plugin issue: The forked VM terminated without properly saying goodbye. VM crash or System.exit called? -->
						<useSystemClassLoader>false</useSystemClassLoader>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${version.maven.surefire.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven.compiler.plugin}</version>
					<configuration>
						<encoding>${maven.compiler.encoding}</encoding>
						<showDeprecation>${maven.compiler.showDeprecation}</showDeprecation>
						<showWarnings>${maven.compiler.showWarnings}</showWarnings>
						<compilerArgument></compilerArgument>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

</project>